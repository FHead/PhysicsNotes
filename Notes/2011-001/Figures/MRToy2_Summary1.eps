%!PS-Adobe-3.0 EPSF-3.0
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 792 612
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
/F8_0 /Helvetica-Bold 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceRGB {} cs
[1 1 1] sc
280 380 7370 4997.5 re
f*
1017.5 880 5895 3997.5 re
f*
7.5 w
/DeviceGray {} CS
[0] SC
1017.5 880 5895 3997.5 re
S
1017.5 1060 m
1057.5 1060 l
1057.5 1062.5 l
1175 1062.5 l
1175 1065 l
1252.5 1065 l
1252.5 1067.5 l
1292.5 1067.5 l
1292.5 1070 l
1332.5 1070 l
1332.5 1072.5 l
1370 1072.5 l
1370 1075 l
1410 1075 l
1410 1077.5 l
1450 1077.5 l
1450 1080 l
1487.5 1080 l
1487.5 1085 l
1527.5 1085 l
1527.5 1090 l
1567.5 1090 l
1567.5 1092.5 l
1607.5 1092.5 l
1607.5 1097.5 l
1645 1097.5 l
1645 1102.5 l
1685 1102.5 l
1685 1107.5 l
1725 1107.5 l
1725 1115 l
1765 1115 l
1765 1120 l
1802.5 1120 l
1802.5 1127.5 l
1842.5 1127.5 l
1842.5 1132.5 l
1882.5 1132.5 l
1882.5 1140 l
1920 1140 l
1920 1147.5 l
1960 1147.5 l
1960 1155 l
2000 1155 l
2000 1162.5 l
2040 1162.5 l
2040 1172.5 l
2077.5 1172.5 l
2077.5 1180 l
2117.5 1180 l
2117.5 1190 l
2157.5 1190 l
2157.5 1197.5 l
2195 1197.5 l
2195 1207.5 l
2235 1207.5 l
2235 1217.5 l
2275 1217.5 l
2275 1227.5 l
2315 1227.5 l
2315 1240 l
2352.5 1240 l
2352.5 1250 l
2392.5 1250 l
2392.5 1262.5 l
2432.5 1262.5 l
2432.5 1272.5 l
2472.5 1272.5 l
2472.5 1285 l
2510 1285 l
2510 1297.5 l
2550 1297.5 l
2550 1310 l
2590 1310 l
2590 1322.5 l
2627.5 1322.5 l
2627.5 1335 l
2667.5 1335 l
2667.5 1350 l
2707.5 1350 l
2707.5 1362.5 l
2747.5 1362.5 l
2747.5 1377.5 l
2785 1377.5 l
2785 1392.5 l
2825 1392.5 l
2825 1407.5 l
2865 1407.5 l
2865 1422.5 l
2902.5 1422.5 l
2902.5 1437.5 l
2942.5 1437.5 l
2942.5 1452.5 l
2982.5 1452.5 l
2982.5 1470 l
3022.5 1470 l
3022.5 1485 l
3060 1485 l
3060 1502.5 l
3100 1502.5 l
3100 1520 l
3140 1520 l
3140 1537.5 l
3180 1537.5 l
3180 1555 l
3217.5 1555 l
3217.5 1572.5 l
3257.5 1572.5 l
3257.5 1592.5 l
3297.5 1592.5 l
3297.5 1610 l
3335 1610 l
3335 1630 l
3375 1630 l
3375 1650 l
3415 1650 l
3415 1670 l
3455 1670 l
3455 1690 l
3492.5 1690 l
3492.5 1710 l
3532.5 1710 l
3532.5 1730 l
3572.5 1730 l
3572.5 1752.5 l
3612.5 1752.5 l
3612.5 1772.5 l
3650 1772.5 l
3650 1795 l
3690 1795 l
3690 1817.5 l
3730 1817.5 l
3730 1840 l
3767.5 1840 l
3767.5 1862.5 l
3807.5 1862.5 l
3807.5 1885 l
3847.5 1885 l
3847.5 1907.5 l
3887.5 1907.5 l
3887.5 1932.5 l
3925 1932.5 l
3925 1955 l
3965 1955 l
3965 1980 l
4005 1980 l
4005 2005 l
4042.5 2005 l
4042.5 2030 l
4082.5 2030 l
4082.5 2055 l
4122.5 2055 l
4122.5 2080 l
4162.5 2080 l
4162.5 2107.5 l
4200 2107.5 l
4200 2132.5 l
4240 2132.5 l
4240 2160 l
4280 2160 l
4280 2187.5 l
4320 2187.5 l
4320 2215 l
4357.5 2215 l
4357.5 2242.5 l
4397.5 2242.5 l
4397.5 2270 l
4437.5 2270 l
4437.5 2297.5 l
4475 2297.5 l
4475 2325 l
4515 2325 l
4515 2355 l
4555 2355 l
4555 2385 l
4595 2385 l
4595 2415 l
4632.5 2415 l
4632.5 2445 l
4672.5 2445 l
4672.5 2475 l
4712.5 2475 l
4712.5 2505 l
4750 2505 l
4750 2535 l
4790 2535 l
4790 2567.5 l
4830 2567.5 l
4830 2597.5 l
4870 2597.5 l
4870 2630 l
4907.5 2630 l
4907.5 2662.5 l
4947.5 2662.5 l
4947.5 2695 l
4987.5 2695 l
4987.5 2727.5 l
5027.5 2727.5 l
5027.5 2760 l
5065 2760 l
5065 2795 l
5105 2795 l
5105 2827.5 l
5145 2827.5 l
5145 2862.5 l
5182.5 2862.5 l
5182.5 2897.5 l
5222.5 2897.5 l
5222.5 2932.5 l
5262.5 2932.5 l
5262.5 2967.5 l
5302.5 2967.5 l
5302.5 3002.5 l
5340 3002.5 l
5340 3037.5 l
5380 3037.5 l
5380 3075 l
5420 3075 l
5420 3110 l
5457.5 3110 l
5457.5 3147.5 l
5497.5 3147.5 l
5497.5 3185 l
5537.5 3185 l
5537.5 3222.5 l
5577.5 3222.5 l
5577.5 3260 l
5615 3260 l
5615 3297.5 l
5655 3297.5 l
5655 3335 l
5695 3335 l
5695 3375 l
5735 3375 l
5735 3412.5 l
5772.5 3412.5 l
5772.5 3452.5 l
5812.5 3452.5 l
5812.5 3492.5 l
5852.5 3492.5 l
5852.5 3532.5 l
5890 3532.5 l
5890 3572.5 l
5930 3572.5 l
5930 3612.5 l
5970 3612.5 l
5970 3655 l
6010 3655 l
6010 3695 l
6047.5 3695 l
6047.5 3737.5 l
6087.5 3737.5 l
6087.5 3780 l
6127.5 3780 l
6127.5 3822.5 l
6165 3822.5 l
6165 3865 l
6205 3865 l
6205 3907.5 l
6245 3907.5 l
6245 3950 l
6285 3950 l
6285 3995 l
6322.5 3995 l
6322.5 4037.5 l
6362.5 4037.5 l
6362.5 4082.5 l
6402.5 4082.5 l
6402.5 4127.5 l
6442.5 4127.5 l
6442.5 4172.5 l
6480 4172.5 l
6480 4217.5 l
6520 4217.5 l
6520 4262.5 l
6560 4262.5 l
6560 4310 l
6597.5 4310 l
6597.5 4355 l
6637.5 4355 l
6637.5 4402.5 l
6677.5 4402.5 l
6677.5 4447.5 l
6717.5 4447.5 l
6717.5 4495 l
6755 4495 l
6755 4542.5 l
6795 4542.5 l
6795 4590 l
6835 4590 l
6835 4640 l
6875 4640 l
6875 4687.5 l
6912.5 4687.5 l
S
1017.5 880 m
6912.5 880 l
S
q
280 380 7370 4997.5 re
W
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 643.28 48.734] Tm
0 0 Td
/F8_0 19.0606 Tf
(Mass) 47.6706 Tj
Q
Q
1017.5 1000 m
1017.5 880 l
S
1212.5 940 m
1212.5 880 l
S
1410 940 m
1410 880 l
S
1607.5 940 m
1607.5 880 l
S
1802.5 1000 m
1802.5 880 l
S
2000 940 m
2000 880 l
S
2195 940 m
2195 880 l
S
2392.5 940 m
2392.5 880 l
S
2590 1000 m
2590 880 l
S
2785 940 m
2785 880 l
S
2982.5 940 m
2982.5 880 l
S
3180 940 m
3180 880 l
S
3375 1000 m
3375 880 l
S
3572.5 940 m
3572.5 880 l
S
3767.5 940 m
3767.5 880 l
S
3965 940 m
3965 880 l
S
4162.5 1000 m
4162.5 880 l
S
4357.5 940 m
4357.5 880 l
S
4555 940 m
4555 880 l
S
4750 940 m
4750 880 l
S
4947.5 1000 m
4947.5 880 l
S
5145 940 m
5145 880 l
S
5340 940 m
5340 880 l
S
5537.5 940 m
5537.5 880 l
S
5735 1000 m
5735 880 l
S
5930 940 m
5930 880 l
S
6127.5 940 m
6127.5 880 l
S
6322.5 940 m
6322.5 880 l
S
6520 1000 m
6520 880 l
S
6520 1000 m
6520 880 l
S
6717.5 940 m
6717.5 880 l
S
6912.5 940 m
6912.5 880 l
S
q
280 380 7370 4997.5 re
W
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 95.8281 69.9219] Tm
0 0 Td
/F8_0 19.0606 Tf
(0) 10.5977 Tj
-3276.37 TJm
(20) 21.1954 Tj
-3054.83 TJm
(40) 21.1954 Tj
-2999 TJm
(60) 21.1954 Tj
-2999.11 TJm
(80) 21.1954 Tj
-2722.09 TJm
(100) 31.7931 Tj
-2497.95 TJm
(120) 31.7931 Tj
-2443.13 TJm
(140) 31.7931 Tj
Q
Q
1017.5 880 m
1017.5 4877.5 l
S
1195 1162.5 m
1017.5 1162.5 l
S
1105 1262.5 m
1017.5 1262.5 l
S
1105 1360 m
1017.5 1360 l
S
1105 1457.5 m
1017.5 1457.5 l
S
1105 1555 m
1017.5 1555 l
S
1195 1652.5 m
1017.5 1652.5 l
S
1105 1752.5 m
1017.5 1752.5 l
S
1105 1850 m
1017.5 1850 l
S
1105 1947.5 m
1017.5 1947.5 l
S
1105 2045 m
1017.5 2045 l
S
1195 2142.5 m
1017.5 2142.5 l
S
1105 2242.5 m
1017.5 2242.5 l
S
1105 2340 m
1017.5 2340 l
S
1105 2437.5 m
1017.5 2437.5 l
S
1105 2535 m
1017.5 2535 l
S
1195 2632.5 m
1017.5 2632.5 l
S
1105 2732.5 m
1017.5 2732.5 l
S
1105 2830 m
1017.5 2830 l
S
1105 2927.5 m
1017.5 2927.5 l
S
1105 3025 m
1017.5 3025 l
S
1195 3122.5 m
1017.5 3122.5 l
S
1105 3222.5 m
1017.5 3222.5 l
S
1105 3320 m
1017.5 3320 l
S
1105 3417.5 m
1017.5 3417.5 l
S
1105 3515 m
1017.5 3515 l
S
1195 3612.5 m
1017.5 3612.5 l
S
1105 3712.5 m
1017.5 3712.5 l
S
1105 3810 m
1017.5 3810 l
S
1105 3907.5 m
1017.5 3907.5 l
S
1105 4005 m
1017.5 4005 l
S
1195 4102.5 m
1017.5 4102.5 l
S
1105 4202.5 m
1017.5 4202.5 l
S
1105 4300 m
1017.5 4300 l
S
1105 4397.5 m
1017.5 4397.5 l
S
1105 4495 m
1017.5 4495 l
S
1195 4595 m
1017.5 4595 l
S
1195 1162.5 m
1017.5 1162.5 l
S
1105 1065 m
1017.5 1065 l
S
1105 967.5 m
1017.5 967.5 l
S
1195 4595 m
1017.5 4595 l
S
1105 4692.5 m
1017.5 4692.5 l
S
1105 4790 m
1017.5 4790 l
S
q
280 380 7370 4997.5 re
W
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 66.1875 109.094] Tm
0 0 Td
/F8_0 19.0606 Tf
(300) 31.7931 Tj
0 49.7656 Td
(310) 31.7931 Tj
0 98.4844 Td
(320) 31.7931 Tj
0 147.1875 Td
(330) 31.7931 Tj
0 196.9687 Td
(340) 31.7931 Tj
0 245.6707 Td
(350) 31.7931 Tj
0 294.3758 Td
(360) 31.7931 Tj
0 343.0938 Td
(370) 31.7931 Tj
Q
Q
352.5 5072.5 5160 280 re
f*
352.5 5072.5 m
5512.5 5072.5 l
S
5512.5 5072.5 m
5512.5 5352.5 l
S
5512.5 5352.5 m
352.5 5352.5 l
S
352.5 5352.5 m
352.5 5072.5 l
S
q
280 380 7370 4997.5 re
W
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 51.3594 515.72] Tm
0 0 Td
/F8_0 22.2373 Tf
(MR mean varying visible mass \(invisible = 25\)) 482.6384 Tj
Q
Q
1047.5 1060 m
1105 1062.5 l
1165 1062.5 l
1222.5 1065 l
1282.5 1067.5 l
1342.5 1072.5 l
1400 1077.5 l
1460 1082.5 l
1517.5 1087.5 l
1577.5 1095 l
1635 1102.5 l
1695 1110 l
1755 1117.5 l
1812.5 1127.5 l
1872.5 1137.5 l
1930 1150 l
1990 1160 l
2050 1172.5 l
2107.5 1187.5 l
2167.5 1200 l
2225 1215 l
2285 1230 l
2342.5 1247.5 l
2402.5 1265 l
2462.5 1282.5 l
2520 1300 l
2580 1320 l
2637.5 1340 l
2697.5 1360 l
2757.5 1380 l
2815 1402.5 l
2875 1425 l
2932.5 1450 l
2992.5 1472.5 l
3050 1497.5 l
3110 1525 l
3170 1550 l
3227.5 1577.5 l
3287.5 1605 l
3345 1635 l
3405 1665 l
3465 1695 l
3522.5 1725 l
3582.5 1757.5 l
3640 1790 l
3700 1822.5 l
3757.5 1855 l
3817.5 1890 l
3877.5 1925 l
3935 1962.5 l
S
3935 1962.5 m
3995 1997.5 l
4052.5 2035 l
4112.5 2075 l
4172.5 2112.5 l
4230 2152.5 l
4290 2192.5 l
4347.5 2235 l
4407.5 2277.5 l
4465 2320 l
4525 2362.5 l
4585 2407.5 l
4642.5 2452.5 l
4702.5 2497.5 l
4760 2542.5 l
4820 2590 l
4880 2637.5 l
4937.5 2687.5 l
4997.5 2735 l
5055 2785 l
5115 2837.5 l
5172.5 2887.5 l
5232.5 2940 l
5292.5 2992.5 l
5350 3047.5 l
5410 3100 l
5467.5 3157.5 l
5527.5 3212.5 l
5587.5 3270 l
5645 3325 l
5705 3385 l
5762.5 3442.5 l
5822.5 3502.5 l
5882.5 3562.5 l
5940 3625 l
6000 3685 l
6057.5 3747.5 l
6117.5 3812.5 l
6175 3875 l
6235 3940 l
6295 4005 l
6352.5 4072.5 l
6412.5 4137.5 l
6470 4205 l
6530 4275 l
6590 4342.5 l
6647.5 4412.5 l
6707.5 4485 l
6765 4555 l
6825 4627.5 l
S
6825 4627.5 m
6882.5 4700 l
S
352.5 5072.5 5160 280 re
f*
352.5 5072.5 m
5512.5 5072.5 l
S
5512.5 5072.5 m
5512.5 5352.5 l
S
5512.5 5352.5 m
352.5 5352.5 l
S
352.5 5352.5 m
352.5 5072.5 l
S
q
280 380 7370 4997.5 re
W
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 51.3594 515.72] Tm
0 0 Td
/F8_0 22.2373 Tf
(MR mean varying visible mass \(invisible = 25\)) 482.6384 Tj
Q
Q
/DeviceGray {} cs
[0] sc
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
